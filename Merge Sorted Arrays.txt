class Solution {
    public void merge(int[] ar1, int n, int[] ar2, int m) {
         int gap =(int) Math.ceil((double)(n + m) / 2.0);
  while (gap > 0) {
    int i = 0;
    int j = gap;
    while (j < (n)) {
      if (j < n && ar1[i] > ar1[j]) {
        int temp=ar1[i];
          ar1[i]=ar1[i];
          ar2[i]=temp;
      } else if (j >= n && i < n && ar1[i] > ar2[j - n]) {
          int temp=ar1[i];
          ar1[i]=ar2[j-n];
          ar2[j-n]=temp;
      } else if (j >= n && i >= n && ar2[i - n] > ar2[j - n]) {
           int temp=ar2[i-n];
          ar2[i-n]=ar2[j-n];
          ar2[j-n]=temp;
        
      }
      j++;
      i++;
    }
    if (gap == 1) {
      gap = 0;
    } else {
      gap =(int) Math.ceil((double) gap / 2.0);
    }
    }
        for(int i=n;i<m+n;i++)
             {
                 ar1[i]=ar2[i-n];
             }
    }
    
}